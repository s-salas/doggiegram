{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport const fetchSuggestion = createAsyncThunk(\n/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n'suggestions/fetchSuggestion', async (arg, thunkAPI) => {\n  try {\n    const response = await fetch(`http://localhost:3004/api/suggestion/${arg}`);\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const data = await response.json();\n    ;\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nconst initialState = {\n  suggestion: '',\n  loading: false,\n  error: true\n};\nconst options = {\n  name: 'suggestion',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    /* Task 16: Inside `extraReducers`, add reducers to handle all three promise lifecycle states - pending, fulfilled, and rejected - for the `fetchSuggestion()` call */\n  }\n};\nconst suggestionSlice = createSlice(options);\nexport default suggestionSlice.reducer; // Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\n\nexport const selectLoading = state => state.suggestion.loading;\nexport const selectError = state => state.suggestion.error;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchSuggestion","arg","thunkAPI","response","fetch","ok","Error","data","json","error","rejectWithValue","message","initialState","suggestion","loading","options","name","reducers","extraReducers","suggestionSlice","reducer","selectLoading","state","selectError"],"sources":["/Users/shelbysalas/Documents/chegg-skills/react-projects/redux-assessment/src/features/suggestion/suggestion.slice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const fetchSuggestion =\n  createAsyncThunk(/* Task 15: Complete the `createAsyncThunk()` function to load a suggestion from this URL: http://localhost:3004/api/suggestion */\n    'suggestions/fetchSuggestion',\n    async (arg, thunkAPI) => {\n      try {\n        const response = await fetch(`http://localhost:3004/api/suggestion/${arg}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n      const data = await response.json();;\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message });\n    }\n    }\n  );\n\nconst initialState = {\n  suggestion: '',\n  loading: false,\n  error: true,\n};\n\nconst options = {\n  name: 'suggestion',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    /* Task 16: Inside `extraReducers`, add reducers to handle all three promise lifecycle states - pending, fulfilled, and rejected - for the `fetchSuggestion()` call */\n  },\n};\n\nconst suggestionSlice = createSlice(options);\n\nexport default suggestionSlice.reducer;\n\n// Task 17: Create a selector, called `selectSuggestion`, for the `suggestion` state variable and export it from the file\n\nexport const selectLoading = (state) => state.suggestion.loading;\nexport const selectError = (state) => state.suggestion.error;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,eAAe,GAC1BF,gBAAgB;AAAC;AACf,6BADc,EAEd,OAAOG,GAAP,EAAYC,QAAZ,KAAyB;EACvB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCH,GAAI,EAA7C,CAA5B;;IACA,IAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB;MAChB,MAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;IACD;;IACH,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;IAAmC;IACnC,OAAOD,IAAP;EACD,CAPC,CAOA,OAAOE,KAAP,EAAc;IACd,OAAOP,QAAQ,CAACQ,eAAT,CAAyB;MAAED,KAAK,EAAEA,KAAK,CAACE;IAAf,CAAzB,CAAP;EACD;AACA,CAba,CADX;AAiBP,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EADO;EAEnBC,OAAO,EAAE,KAFU;EAGnBL,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMM,OAAO,GAAG;EACdC,IAAI,EAAE,YADQ;EAEdJ,YAFc;EAGdK,QAAQ,EAAE,EAHI;EAIdC,aAAa,EAAE;IACb;EADa;AAJD,CAAhB;AASA,MAAMC,eAAe,GAAGpB,WAAW,CAACgB,OAAD,CAAnC;AAEA,eAAeI,eAAe,CAACC,OAA/B,C,CAEA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAWA,KAAK,CAACT,UAAN,CAAiBC,OAAlD;AACP,OAAO,MAAMS,WAAW,GAAID,KAAD,IAAWA,KAAK,CAACT,UAAN,CAAiBJ,KAAhD"},"metadata":{},"sourceType":"module"}