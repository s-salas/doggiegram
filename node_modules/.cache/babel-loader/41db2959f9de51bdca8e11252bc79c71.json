{"ast":null,"code":"var _jsxFileName = \"/Users/shelbysalas/Documents/chegg-skills/react-projects/redux-assessment/src/features/suggestion/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchSuggestion, selectError, selectLoading, selectSuggestion // Task 18: Import the `selectSuggestion()` selector from the suggestion slice\n} from './suggestion.slice';\nimport './suggestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Suggestion() {\n  _s();\n\n  // Task 19: Call useSelector() with the selectSuggestion() selector\n  // The component needs to access the `imageUrl` and `caption` properties of the suggestion object.\n  useDispatch(selectSuggestion);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function loadSuggestion() {// Task 20: Dispatch the fetchSuggestion() action creator\n    }\n\n    loadSuggestion();\n  }, [dispatch]);\n  let render;\n\n  if (loading) {\n    render = /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this);\n  } else if (error) {\n    render = /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sorry, we're having trouble loading the suggestion.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  } else {\n    // Task 21: Enable the two JSX lines below needed to display the suggestion on the page\n    render = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"suggestion-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Suggestion of the Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), render]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Suggestion, \"YrLAe1gjtBLFemq3rHU/Un8wHdY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useDispatch];\n});\n\n_c = Suggestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Suggestion\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","fetchSuggestion","selectError","selectLoading","selectSuggestion","Suggestion","loading","error","dispatch","loadSuggestion","render"],"sources":["/Users/shelbysalas/Documents/chegg-skills/react-projects/redux-assessment/src/features/suggestion/index.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchSuggestion,\n  selectError,\n  selectLoading,\n  selectSuggestion,\n  // Task 18: Import the `selectSuggestion()` selector from the suggestion slice\n} from './suggestion.slice';\nimport './suggestion.css';\n\nexport default function Suggestion() {\n  // Task 19: Call useSelector() with the selectSuggestion() selector\n  // The component needs to access the `imageUrl` and `caption` properties of the suggestion object.\n  useDispatch(selectSuggestion);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function loadSuggestion() {\n      // Task 20: Dispatch the fetchSuggestion() action creator\n    }\n    loadSuggestion();\n  }, [dispatch]);\n\n  let render;\n  if (loading) {\n    render = <h3>Loading...</h3>;\n  } else if (error) {\n    render = <h3>Sorry, we're having trouble loading the suggestion.</h3>;\n  } else {\n    // Task 21: Enable the two JSX lines below needed to display the suggestion on the page\n    render = (\n      <>\n        {/* <img alt={caption} src={imageUrl} />\n        <p>{imageUrl}</p> */}\n      </>\n    );\n  }\n\n  return (\n    <section className=\"suggestion-container\">\n      <h2>Suggestion of the Day</h2>\n      {render}\n    </section>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,gBAJF,CAKE;AALF,OAMO,oBANP;AAOA,OAAO,kBAAP;;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC;EACA;EACAN,WAAW,CAACK,gBAAD,CAAX;EACA,MAAME,OAAO,GAAGN,WAAW,CAACG,aAAD,CAA3B;EACA,MAAMI,KAAK,GAAGP,WAAW,CAACE,WAAD,CAAzB;EACA,MAAMM,QAAQ,GAAGT,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACd,eAAeW,cAAf,GAAgC,CAC9B;IACD;;IACDA,cAAc;EACf,CALQ,EAKN,CAACD,QAAD,CALM,CAAT;EAOA,IAAIE,MAAJ;;EACA,IAAIJ,OAAJ,EAAa;IACXI,MAAM,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAT;EACD,CAFD,MAEO,IAAIH,KAAJ,EAAW;IAChBG,MAAM,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAT;EACD,CAFM,MAEA;IACL;IACAA,MAAM,gBACJ,qCADF;EAMD;;EAED,oBACE;IAAS,SAAS,EAAC,sBAAnB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,MAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GApCuBL,U;UAGtBN,W,EACgBC,W,EACFA,W,EACGD,W;;;KANKM,U"},"metadata":{},"sourceType":"module"}